#!/bin/bash
# Script que executa de forma simplificada o programa em Python de Pokémon.
# O nome é uma homenagem a um Pokémon chamado Exeggcute (sim, é uma piada ruim).

# Nome dos diretórios
POKEDIR="pokemon/"
SRCDIR="src/"

# --------------------------------------------------------------------
# Mostra como usar o script.

function uso {
    echo -e "\e[1mUSO\e[0m"
    echo -e "\t$1 [\e[1mPokémon 1\e[0m] [\e[1mPokémon 2\e[0m] [\e[1m-h\e[0m] [\e[1m-i\e[0m]\n"

    echo -e "\e[1mDESCRIÇÃO\e[0m"
    echo -e "\tExecuta o '${SRCDIR}main.py' com os Pokémons em '${POKEDIR}' citados como parâmetros."
    echo -e "\tOs Pokémons devem ser digitados sem a extensão '.txt'. Por exemplo:\n"
    echo -e "\t$0 Blastoise Charizard\n"
    echo -e "\tSe nenhum Pokémon for passado como parâmetro, a escolha será aleatória.\n"

    echo -e "\e[1mOPÇÕES\e[0m"
    echo -e "\tSepare cada opção com um espaço.\n"

    echo -e "\t\e[1m-h\e[0m\tMostra como usar o script, além de abandoná-lo.\n"
    echo -e "\t\e[1m-i\e[0m\tMostra os Pokémons disponíveis e abandona o script.\n"

    exit
}

# --------------------------------------------------------------------
# MAIN

# Verifica se há alguma opção especial
for arg in "$@"; do
    case $arg in
    -h)
        uso "$0";;
    -i)
        ls --color=auto $POKEDIR
        exit;;
    esac
done

if (( $# == 0 )); then
    # A implementação permite ter uma batalha de mesmos Pokémons!
    arq=`find $POKEDIR/* | shuf -n 1`
    # cat $arq `find $POKEDIR/* | shuf -n 1` - | ./$SRCDIR/main.py
    cat $arq `find $POKEDIR/* | shuf -n 1` - | ./src/multiplayer.py "$3"
else
    if [ -f "$POKEDIR/$1.txt" ]; then
        if [ -f "$POKEDIR/$2.txt" ]; then
            cat "$POKEDIR/$1.txt" "$POKEDIR/$2.txt" - | ./src/multiplayer.py "$3"
        else
            echo "'$2.txt' não encontrado!"
        fi
    else
        echo "'$1.txt' não encontrado!"
    fi
fi
