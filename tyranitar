#!/bin/bash
# Script que cria um tar.gz do projeto com os arquivos essenciais.
# O nome é uma homenagem a um Pokémon chamado Tyranitar (a zueira não tem fim).

# Nome do diretório local
LOCAL=`basename "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"`

# Nome do tar.gz a ser criado
TAR=$LOCAL

# Arquivos que não serão copiados para o tar.gz
EXCEPT="(bin)|(include)|(lib)|(tyranitar)|($TAR)"

# --------------------------------------------------------------------
# Mostra como usar o script.

function uso {
    echo -e "\e[1mUSO\e[0m"
    echo -e "\t./`basename $0` [\e[1m-h\e[0m]\n"

    echo -e "\e[1mDESCRIÇÃO\e[0m"
    echo -e "\tCria um tar.gz do projeto com os arquivos essenciais."
    echo -e "\tDeve-se estar no mesmo diretório do projeto para funcionar!\n"

    echo -e "\e[1mOPÇÕES\e[0m"
    echo -e "\t\e[1m-h\e[0m\tMostra como usar o script, além de abandoná-lo.\n"

    exit
}

# --------------------------------------------------------------------
# MAIN 

# Argumentos por linha de comando
for arg in "$@"; do
    if [ "$arg" == "-h" ]; then uso; fi
done

# Só faz o tar.gz se estiver no mesmo diretório do projeto
if [[ `basename $PWD` != $LOCAL ]]; then
    echo "É necessário estar no mesmo diretório do projeto!"
    exit
fi

# Cria o tar.gz
echo "Criando o tar.gz..."

mkdir $TAR && cp -rf --parents `ls | egrep -v "$EXCEPT"` $TAR
rm -rf `find $TAR -type d -name __pycache__`
tar -czf $TAR.tar.gz $TAR
rm -rf $TAR

echo -e "Arquivo\033[1;31m $TAR.tar.gz \033[0mcriado com sucesso!"
